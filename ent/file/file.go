// Code generated by entc, DO NOT EDIT.

package file

import (
	"time"
)

const (
	// Label holds the string label denoting the file type in the database.
	Label = "file"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreationTime holds the string denoting the creationtime field in the database.
	FieldCreationTime = "creation_time"
	// FieldLastModifiedTime holds the string denoting the lastmodifiedtime field in the database.
	FieldLastModifiedTime = "last_modified_time"
	// FieldSize holds the string denoting the size field in the database.
	FieldSize = "size"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldHash holds the string denoting the hash field in the database.
	FieldHash = "hash"
	// FieldContentType holds the string denoting the contenttype field in the database.
	FieldContentType = "content_type"
	// EdgeLinks holds the string denoting the links edge name in mutations.
	EdgeLinks = "links"
	// Table holds the table name of the file in the database.
	Table = "files"
	// LinksTable is the table that holds the links relation/edge.
	LinksTable = "links"
	// LinksInverseTable is the table name for the Link entity.
	// It exists in this package in order to avoid circular dependency with the "link" package.
	LinksInverseTable = "links"
	// LinksColumn is the table column denoting the links relation/edge.
	LinksColumn = "file_links"
)

// Columns holds all SQL columns for file fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreationTime,
	FieldLastModifiedTime,
	FieldSize,
	FieldContent,
	FieldHash,
	FieldContentType,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "Name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultCreationTime holds the default value on creation for the "CreationTime" field.
	DefaultCreationTime func() time.Time
	// DefaultSize holds the default value on creation for the "Size" field.
	DefaultSize int
	// SizeValidator is a validator for the "Size" field. It is called by the builders before save.
	SizeValidator func(int) error
	// HashValidator is a validator for the "Hash" field. It is called by the builders before save.
	HashValidator func(string) error
)
